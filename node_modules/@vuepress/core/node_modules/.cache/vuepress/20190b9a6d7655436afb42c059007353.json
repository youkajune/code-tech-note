{"remainingRequest":"E:\\Blog\\VuepressNote\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\Blog\\VuepressNote\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Blog\\VuepressNote\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Blog\\VuepressNote\\node_modules\\vuepress-theme-reco\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Blog\\VuepressNote\\node_modules\\vuepress-theme-reco\\components\\Navbar.vue","mtime":1661771658433},{"path":"E:\\Blog\\VuepressNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661688870674},{"path":"E:\\Blog\\VuepressNote\\node_modules\\babel-loader\\lib\\index.js","mtime":1661688870797},{"path":"E:\\Blog\\VuepressNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661688870674},{"path":"E:\\Blog\\VuepressNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1661688871329}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCByZWYsIG9uTW91bnRlZCwgY29tcHV0ZWQgfSBmcm9tICd2dWUnOwppbXBvcnQgQWxnb2xpYVNlYXJjaEJveCBmcm9tICdAQWxnb2xpYVNlYXJjaEJveCc7CmltcG9ydCBTZWFyY2hCb3ggZnJvbSAnQFNlYXJjaEJveCc7CmltcG9ydCBTaWRlYmFyQnV0dG9uIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1NpZGViYXJCdXR0b24nOwppbXBvcnQgTmF2TGlua3MgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2TGlua3MnOwppbXBvcnQgTW9kZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9Nb2RlJzsKaW1wb3J0IHsgdXNlSW5zdGFuY2UgfSBmcm9tICdAdGhlbWUvaGVscGVycy9jb21wb3NhYmxlJzsKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBTaWRlYmFyQnV0dG9uLAogICAgTmF2TGlua3MsCiAgICBTZWFyY2hCb3gsCiAgICBBbGdvbGlhU2VhcmNoQm94LAogICAgTW9kZQogIH0sCgogIHNldHVwKHByb3BzLCBjdHgpIHsKICAgIGNvbnN0IGluc3RhbmNlID0gdXNlSW5zdGFuY2UoKTsKICAgIGNvbnN0IGxpbmtzV3JhcE1heFdpZHRoID0gcmVmKG51bGwpOwogICAgY29uc3QgYWxnb2xpYSA9IGNvbXB1dGVkKCgpID0+IHsKICAgICAgcmV0dXJuIGluc3RhbmNlLiR0aGVtZUxvY2FsZUNvbmZpZy5hbGdvbGlhIHx8IGluc3RhbmNlLiR0aGVtZUNvbmZpZy5hbGdvbGlhIHx8IHt9OwogICAgfSk7CiAgICBjb25zdCBpc0FsZ29saWFTZWFyY2ggPSBjb21wdXRlZCgoKSA9PiB7CiAgICAgIGFsZ29saWEudmFsdWUgJiYgYWxnb2xpYS52YWx1ZS5hcGlLZXkgJiYgYWxnb2xpYS52YWx1ZS5pbmRleE5hbWU7CiAgICB9KTsKCiAgICBmdW5jdGlvbiBjc3MoZWwsIHByb3BlcnR5KSB7CiAgICAgIC8vIE5PVEU6IEtub3duIGJ1Zywgd2lsbCByZXR1cm4gJ2F1dG8nIGlmIHN0eWxlIHZhbHVlIGlzICdhdXRvJwogICAgICBjb25zdCB3aW4gPSBlbC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3OyAvLyBudWxsIG1lYW5zIG5vdCB0byByZXR1cm4gcHNldWRvIHN0eWxlcwoKICAgICAgcmV0dXJuIHdpbi5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKVtwcm9wZXJ0eV07CiAgICB9CgogICAgb25Nb3VudGVkKCgpID0+IHsKICAgICAgY29uc3QgTU9CSUxFX0RFU0tUT1BfQlJFQUtQT0lOVCA9IDcxOTsgLy8gcmVmZXIgdG8gY29uZmlnLnN0eWwKCiAgICAgIGNvbnN0IE5BVkJBUl9WRVJUSUNBTF9QQURESU5HID0gcGFyc2VJbnQoY3NzKGluc3RhbmNlLiRlbCwgJ3BhZGRpbmdMZWZ0JykpICsgcGFyc2VJbnQoY3NzKGluc3RhbmNlLiRlbCwgJ3BhZGRpbmdSaWdodCcpKTsKCiAgICAgIGNvbnN0IGhhbmRsZUxpbmtzV3JhcFdpZHRoID0gKCkgPT4gewogICAgICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggPCBNT0JJTEVfREVTS1RPUF9CUkVBS1BPSU5UKSB7CiAgICAgICAgICBsaW5rc1dyYXBNYXhXaWR0aC52YWx1ZSA9IG51bGw7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxpbmtzV3JhcE1heFdpZHRoLnZhbHVlID0gaW5zdGFuY2UuJGVsLm9mZnNldFdpZHRoIC0gTkFWQkFSX1ZFUlRJQ0FMX1BBRERJTkcgLSAoaW5zdGFuY2UuJHJlZnMuc2l0ZU5hbWUgJiYgaW5zdGFuY2UuJHJlZnMuc2l0ZU5hbWUub2Zmc2V0V2lkdGggfHwgMCk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgaGFuZGxlTGlua3NXcmFwV2lkdGgoKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZUxpbmtzV3JhcFdpZHRoLCBmYWxzZSk7CiAgICB9KTsKICAgIHJldHVybiB7CiAgICAgIGxpbmtzV3JhcE1heFdpZHRoLAogICAgICBhbGdvbGlhLAogICAgICBpc0FsZ29saWFTZWFyY2gsCiAgICAgIGNzcwogICAgfTsKICB9Cgp9KTs="},{"version":3,"mappings":"AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA,CADA;;EAGAC;IACA;IACA;IAEA;MACA;IACA,CAFA;IAIA;MACAC;IACA,CAFA;;IAIA;MACA;MACA,yCAFA,CAGA;;MACA;IACA;;IAEAC;MACA,sCADA,CACA;;MACA,gCACAC,6CACAA,2CAFA;;MAIA;QACA;UACAC;QACA,CAFA,MAEA;UACAA,0BACAC,2BACAC,uBADA,IAEAD,mEAFA,CADA;QAIA;MACA,CATA;;MAWAE;MACAC;IACA,CAnBA;IAqBA;MAAAJ;MAAAH;MAAAQ;MAAAC;IAAA;EACA;;AA5CA","names":["components","SidebarButton","NavLinks","SearchBox","AlgoliaSearchBox","Mode","setup","algolia","onMounted","parseInt","linksWrapMaxWidth","instance","NAVBAR_VERTICAL_PADDING","handleLinksWrapWidth","window","isAlgoliaSearch","css"],"sourceRoot":"node_modules/vuepress-theme-reco/components","sources":["Navbar.vue"],"sourcesContent":["<template>\n  <header class=\"navbar\">\n    <SidebarButton @toggle-sidebar=\"$emit('toggle-sidebar')\"/>\n\n    <router-link\n      :to=\"$localePath\"\n      class=\"home-link\">\n      <img\n        class=\"logo\"\n        v-if=\"$themeConfig.logo\"\n        :src=\"$withBase($themeConfig.logo)\"\n        :alt=\"$siteTitle\">\n      <span\n        ref=\"siteName\"\n        class=\"site-name\"\n        v-if=\"$siteTitle\">{{ $siteTitle }}</span>\n    </router-link>\n\n    <div\n      class=\"links\"\n      :style=\"linksWrapMaxWidth ? {\n        'max-width': linksWrapMaxWidth + 'px'\n      } : {}\">\n\n      <Mode />\n      <AlgoliaSearchBox\n        v-if=\"isAlgoliaSearch\"\n        :options=\"algolia\"/>\n      <SearchBox v-else-if=\"$themeConfig.search !== false && $frontmatter.search !== false\"/>\n      <NavLinks class=\"can-hide\"/>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted, computed } from 'vue'\nimport AlgoliaSearchBox from '@AlgoliaSearchBox'\nimport SearchBox from '@SearchBox'\nimport SidebarButton from '@theme/components/SidebarButton'\nimport NavLinks from '@theme/components/NavLinks'\nimport Mode from '@theme/components/Mode'\nimport { useInstance } from '@theme/helpers/composable'\n\nexport default defineComponent({\n  components: { SidebarButton, NavLinks, SearchBox, AlgoliaSearchBox, Mode },\n\n  setup (props, ctx) {\n    const instance = useInstance()\n    const linksWrapMaxWidth = ref(null)\n\n    const algolia = computed(() => {\n      return instance.$themeLocaleConfig.algolia || instance.$themeConfig.algolia || {}\n    })\n\n    const isAlgoliaSearch = computed(() => {\n      algolia.value && algolia.value.apiKey && algolia.value.indexName\n    })\n\n    function css (el, property) {\n      // NOTE: Known bug, will return 'auto' if style value is 'auto'\n      const win = el.ownerDocument.defaultView\n      // null means not to return pseudo styles\n      return win.getComputedStyle(el, null)[property]\n    }\n\n    onMounted(() => {\n      const MOBILE_DESKTOP_BREAKPOINT = 719 // refer to config.styl\n      const NAVBAR_VERTICAL_PADDING =\n        parseInt(css(instance.$el, 'paddingLeft')) +\n        parseInt(css(instance.$el, 'paddingRight'))\n\n      const handleLinksWrapWidth = () => {\n        if (document.documentElement.clientWidth < MOBILE_DESKTOP_BREAKPOINT) {\n          linksWrapMaxWidth.value = null\n        } else {\n          linksWrapMaxWidth.value =\n            instance.$el.offsetWidth -\n            NAVBAR_VERTICAL_PADDING -\n            (instance.$refs.siteName && instance.$refs.siteName.offsetWidth || 0)\n        }\n      }\n\n      handleLinksWrapWidth()\n      window.addEventListener('resize', handleLinksWrapWidth, false)\n    })\n\n    return { linksWrapMaxWidth, algolia, isAlgoliaSearch, css }\n  }\n})\n</script>\n\n<style lang=\"stylus\">\n$navbar-vertical-padding = 0.7rem\n$navbar-horizontal-padding = 1.5rem\n\n.navbar\n  padding $navbar-vertical-padding $navbar-horizontal-padding\n  line-height $navbarHeight - 1.4rem\n  box-shadow var(--box-shadow)\n  background var(--background-color)\n  a, span, img\n    display inline-block\n  .logo\n    height $navbarHeight - 1.4rem\n    min-width $navbarHeight - 1.4rem\n    margin-right 0.8rem\n    vertical-align top\n    border-radius 50%\n  .site-name\n    font-size 1.2rem\n    font-weight 600\n    color var(--text-color)\n    position relative\n  .links\n    padding-left 1.5rem\n    box-sizing border-box\n    white-space nowrap\n    font-size 0.9rem\n    position absolute\n    right $navbar-horizontal-padding\n    top $navbar-vertical-padding\n    display flex\n    background-color var(--background-color)\n    .search-box\n      flex: 0 0 auto\n      vertical-align top\n\n@media (max-width: $MQMobile)\n  .navbar\n    padding-left 4rem\n    .can-hide\n      display none\n    .links\n      padding-left .2rem\n</style>\n"]}]}